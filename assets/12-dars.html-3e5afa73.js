import{_ as n,o as s,c as e,b as t,a}from"./app-d17e5b05.js";const i={},o=a(`<h1 id="ðŸ“”-12-dars" tabindex="-1"><a class="header-anchor" href="#ðŸ“”-12-dars" aria-hidden="true">#</a> ðŸ“” 12-dars</h1><h2 id="muntazam-ifodalar" tabindex="-1"><a class="header-anchor" href="#muntazam-ifodalar" aria-hidden="true">#</a> Muntazam Ifodalar</h2><p>Muntazam ifoda yoki RegExp kichik dasturlash tili bo&#39;lib, u ma&#39;lumotlarda naqsh topishga yordam beradi. RegExp-dan boshqa ma&#39;lumotlar turlarida qandaydir naqsh mavjudligini tekshirish uchun foydalanish mumkin. JavaScript-da RegExp-dan foydalanish uchun biz RegExp konstruktoridan foydalanamiz yoki ikkita oldinga qiyshiq chiziqdan keyin bayroq yordamida RegExp naqshini e&#39;lon qilishimiz mumkin. Biz ikkita usulda naqsh yaratishimiz mumkin.</p><p>Satrni e&#39;lon qilish uchun biz bitta qo&#39;shtirnoqdan foydalanamiz, oddiy iborani e&#39;lon qilish uchun ikkita qo&#39;shtirnoq qo&#39;yamiz va ixtiyoriy bayroqdan foydalanamiz. Bayroq g, i, m, s, u yoki y bo&#39;lishi mumkin.</p><h3 id="regexp-parametrlari" tabindex="-1"><a class="header-anchor" href="#regexp-parametrlari" aria-hidden="true">#</a> RegExp parametrlari</h3><p>Muntazam ifoda ikkita parametrni oladi. Bitta talab qilinadigan qidiruv namunasi va ixtiyoriy bayroq.</p><h4 id="pattern" tabindex="-1"><a class="header-anchor" href="#pattern" aria-hidden="true">#</a> Pattern</h4><p>Naqsh matn yoki qandaydir o&#39;xshashlik bo&#39;lgan naqshning har qanday shakli bo&#39;lishi mumkin. Misol uchun, elektron pochtadagi spam so&#39;zi biz e-pochtada qidirmoqchi bo&#39;lgan namuna bo&#39;lishi mumkin yoki telefon raqami formatidagi raqam bizning qiziqishimiz bo&#39;lishi mumkin.</p><h4 id="bayroqlar" tabindex="-1"><a class="header-anchor" href="#bayroqlar" aria-hidden="true">#</a> Bayroqlar</h4><p>Bayroqlar muntazam ifodadagi ixtiyoriy parametrlar bo&#39;lib, qidiruv turini aniqlaydi. Keling, ba&#39;zi bayroqlarni ko&#39;rib chiqaylik:</p><ul><li>g: bu global bayroq bo&#39;lib, butun matnda naqsh izlashni anglatadi</li><li>i: katta-kichik harflarni sezmaydigan bayroq (u kichik va katta harflarni qidiradi)</li><li>m: ko&#39;p qatorli</li></ul><h3 id="regexp-constructor-yordamida-pattern-yaratish" tabindex="-1"><a class="header-anchor" href="#regexp-constructor-yordamida-pattern-yaratish" aria-hidden="true">#</a> RegExp Constructor yordamida pattern yaratish</h3><p>Muntazam ifodani global bayroqsiz va katta-kichik harflarga sezgir bo&#39;lmagan bayroqsiz e&#39;lon qilish.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// bayroqsiz </span>
<span class="token keyword">let</span> pattern <span class="token operator">=</span> <span class="token string">&#39;love&#39;</span>
<span class="token keyword">let</span> regEx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Global bayroq va katta-kichik harflarga sezgir bo&#39;lmagan bayroq bilan muntazam ifodani e&#39;lon qilish.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> pattern <span class="token operator">=</span> <span class="token string">&#39;love&#39;</span>
<span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token string">&#39;gi&#39;</span>
<span class="token keyword">let</span> regEx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span> flag<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>RegExp obyekti yordamida regex naqshini e&#39;lon qilish. RegExp konstruktori ichida naqsh va bayroqni yozish</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> regEx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;love&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;gi&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="regexp-konstruktorisiz-pattern-yaratish" tabindex="-1"><a class="header-anchor" href="#regexp-konstruktorisiz-pattern-yaratish" aria-hidden="true">#</a> RegExp Konstruktorisiz pattern yaratish</h3><p>Global bayroq va katta-kichik harflarga sezgir bo&#39;lmagan bayroq bilan muntazam ifodani e&#39;lon qilish.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> regEx<span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">love</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Yuqoridagi oddiy ibora biz RegExp konstruktori bilan yaratganimiz bilan bir xil</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> regEx<span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;love&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;gi&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="regexpp-ob-ekt-usullari" tabindex="-1"><a class="header-anchor" href="#regexpp-ob-ekt-usullari" aria-hidden="true">#</a> RegExpp ob&#39;ekt usullari</h3><p>Keling, RegExp usullarini ko&#39;rib chiqaylik</p><h4 id="moslikka-tekshirish" tabindex="-1"><a class="header-anchor" href="#moslikka-tekshirish" aria-hidden="true">#</a> Moslikka tekshirish</h4><p><em>test()</em>: Satrdagi moslik uchun testlar. Bu rost yoki yolg&#39;onni qaytaradi.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;I love JavaScript&#39;</span>
<span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">love</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">const</span> result <span class="token operator">=</span> pattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="barcha-moslikni-o-z-ichiga-olgan-massiv" tabindex="-1"><a class="header-anchor" href="#barcha-moslikni-o-z-ichiga-olgan-massiv" aria-hidden="true">#</a> Barcha moslikni o&#39;z ichiga olgan massiv</h4><p><em>match()</em>:Barcha mosliklarni, jumladan qoÊ»lga olish guruhlarini oÊ»z ichiga olgan massivni qaytaradi yoki moslik topilmasa null. Agar biz global bayroqdan foydalanmasak, match() naqsh, indeks, kiritish va guruhni o&#39;z ichiga olgan massivni qaytaradi.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;I love JavaScript&#39;</span>
<span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">love</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">const</span> result <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token string">&quot;love&quot;</span>, index: <span class="token number">2</span>, input: <span class="token string">&quot;I love JavaScript&quot;</span>, groups: undefined<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;I love JavaScript&#39;</span>
<span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">love</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
<span class="token keyword">const</span> result <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token string">&quot;love&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><em>search()</em>: Satrdagi moslikni tekshiradi. U moslik indeksini qaytaradi yoki agar qidiruv muvaffaqiyatsiz bo&#39;lsa -1.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;I love JavaScript&#39;</span>
<span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">love</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
<span class="token keyword">const</span> result <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="berilgan-satrni-almashtirish" tabindex="-1"><a class="header-anchor" href="#berilgan-satrni-almashtirish" aria-hidden="true">#</a> Berilgan satrni almashtirish</h4><p><em>replace()</em>: satrdagi moslikni qidirishni amalga oshiradi va mos keladigan pastki qatorni almashtiriladigan pastki qator bilan almashtiradi.</p><p>Ya&#39;ni bu misolda <code>Python</code> yoki <code>python</code> so&#39;zi mavjud bo&#39;lsa uni <code>JavaScript</code> ga almashtiradi.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;Python is the most beautiful language that a human begin has ever created.\\
I recommend python for a first programming language&#39;</span>

matchReplaced <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Python|python</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matchReplaced<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>JavaScript is the <span class="token function">most</span> beautiful language that a human begin has ever created.I recommend python <span class="token keyword">for</span> a first programming language
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;Python is the most beautiful language that a human begin has ever created.\\
I recommend python for a first programming language&#39;</span>

matchReplaced <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Python|python</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matchReplaced<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>JavaScript is the <span class="token function">most</span> beautiful language that a human begin has ever created.I recommend JavaScript <span class="token keyword">for</span> a first programming language
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;Python is the most beautiful language that a human begin has ever created.\\
I recommend python for a first programming language&#39;</span>

matchReplaced <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Python</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span> <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matchReplaced<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>JavaScript is the <span class="token function">most</span> beautiful language that a human begin has ever created.I recommend JavaScript <span class="token keyword">for</span> a first programming language
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
<span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;%I a%m te%%a%%che%r% a%n%d %% I l%o%ve te%ach%ing.\\
T%he%re i%s n%o%th%ing as m%ore r%ewarding a%s e%duc%at%i%ng a%n%d e%m%p%ow%er%ing \\
p%e%o%ple.\\
I fo%und te%a%ching m%ore i%n%t%er%%es%ting t%h%an any other %jobs.\\
D%o%es thi%s m%ot%iv%a%te %y%o%u to b%e a t%e%a%cher.&#39;</span>

matches <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">%</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">)</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>I am teacher and  I love teaching.There is nothing as <span class="token function">more</span> rewarding as educating and empowering people.I found teaching <span class="token function">more</span> interesting than any other jobs.Does this motivate you to be a teacher.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>[]: Belgilar toÊ»plami <ul><li>[a-c] a yoki b yoki c degan ma&#39;noni anglatadi</li><li>[a-z] a dan z gacha boÊ»lgan har qanday harfni bildiradi</li><li>[A-Z] A dan Z gacha boÊ»lgan har qanday belgini bildiradi</li><li>[0-3] 0 yoki 1 yoki 2 yoki 3 degan maÊ¼noni anglatadi</li><li>[0-9] 0 dan 9 gacha bo&#39;lgan istalgan sonni bildiradi</li><li>[A-Za-z0-9] a dan z gacha, A dan Z gacha, 0 dan 9 gacha bo&#39;lgan har qanday belgi</li></ul></li><li>\\: maxsus belgilardan qochish uchun foydalanadi <ul><li>\\d anglatadi: satrda raqamlar mavjud bo&#39;lgan joyga mos keladi (0-9 gacha raqamlar)</li><li>\\D anglatadi: satrda raqamlar bo&#39;lmagan joyda mos keladi</li></ul></li><li>. : yangi satr belgisidan tashqari har qanday belgi (\\n)</li><li>^: bilan boshlanadi <ul><li>r&#39;^substring&#39; masalan, r&#39;^love&#39;, love so&#39;zi bilan boshlangan gap</li><li>r&#39;[^abc] anglatadi: a emas, b emas, c emas.</li></ul></li><li>$: bilan tugaydi <ul><li>r&#39;substring$&#39; masalan, r&#39;love$&#39;, gap love so&#39;zi bilan tugaydi</li></ul></li><li>*: nol yoki undan ortiq marta <ul><li>r&#39;[a]*&#39; ixtiyoriy degan ma&#39;noni anglatadi yoki u ko&#39;p marta sodir bo&#39;lishi mumkin.</li></ul></li><li>+: bir yoki bir necha marta <ul><li>r&#39;[a]+&#39; kamida bir yoki bir necha marta ma&#39;noni anglatadi</li></ul></li><li>?: nol yoki bir marta <ul><li>r&#39;[a]?&#39; nol marta yoki bir marta degani</li></ul></li><li>{3}: Aynan 3 ta belgi</li><li>{3,}: kamida 3 ta belgi</li><li>{3,8}: 3 dan 8 gacha belgilar</li><li>|: yoki <ul><li>r&#39;apple|banana&#39; apple yoki banana degan ma&#39;noni anglatadi</li></ul></li><li>(): Qamrab olish va guruhlash</li></ul>`,50),p=a(`<p>Yuqoridagi meta-belgilarni aniqlashtirish uchun misoldan foydalanamiz</p><h3 id="kvadrat-qavs" tabindex="-1"><a class="header-anchor" href="#kvadrat-qavs" aria-hidden="true">#</a> Kvadrat qavs</h3><p>Kichik va katta harflarni kiritish uchun kvadrat qavsdan foydalanamiz</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token string">&#39;[Aa]pple&#39;</span> <span class="token comment">// bu kvadrat qavs A yoki a ekanligini anglatadi</span>
<span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;Apple and banana are fruits. An old cliche says an apple a day a doctor way has been replaced by a banana a day keeps the doctor far far away. &#39;</span>
<span class="token keyword">const</span> matches <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">)</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token string">&quot;Apple&quot;</span>, index: <span class="token number">0</span>, input: <span class="token string">&quot;Apple and banana are fruits. An old cliche says anâ€¦by a banana a day keeps the doctor far far away. &quot;</span>, groups: undefined<span class="token punctuation">]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[Aa]pple</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span> <span class="token comment">// bu kvadrat qavs A yoki a ekanligini anglatadi</span>
<span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;Apple and banana are fruits. An old cliche says an apple a day a doctor way has been replaced by a banana a day keeps the doctor far far away. &#39;</span>
<span class="token keyword">const</span> matches <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">)</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token string">&quot;Apple&quot;</span>, <span class="token string">&quot;apple&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Agar biz <em>banana</em> ni qidirmoqchi bo&#39;lsak, naqshni quyidagicha yozamiz:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[Aa]pple|[Bb]anana</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span> <span class="token comment">// bu kvadrat qavs A yoki a ekanligini anglatadi</span>
<span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;Apple and banana are fruits. An old cliche says an apple a day a doctor way has been replaced by a banana a day keeps the doctor far far away. Banana is easy to eat too.&#39;</span>
<span class="token keyword">const</span> matches <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">)</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token string">&quot;Apple&quot;</span>, <span class="token string">&quot;banana&quot;</span>, <span class="token string">&quot;apple&quot;</span>, <span class="token string">&quot;banana&quot;</span>, <span class="token string">&quot;Banana&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Kvadrat qavs yoki operatordan foydalanib, biz <em>Olma</em>, <em>olma</em>, <em>Banan</em> va <em>banan</em> larni ajratib olamiz.</p><h3 id="regexp-dagi-escape-belgisi" tabindex="-1"><a class="header-anchor" href="#regexp-dagi-escape-belgisi" aria-hidden="true">#</a> RegExp dagi Escape belgisi()</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>  <span class="token comment">// d - bu raqamlarni bildiruvchi maxsus belgi </span>
<span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;This regular expression example was made in January 12,  2022.&#39;</span>
<span class="token keyword">const</span> matches <span class="token operator">=</span> txt<span class="token punctuation">.</span> <span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">)</span>  <span class="token comment">// [&quot;1&quot;, &quot;2&quot;, &quot;2&quot;, &quot;0&quot;, &quot;2&quot;, &quot;0&quot;], bu biz xohlagan narsa emas</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>  <span class="token comment">// d - bu maxsus belgi, ya&#39;ni raqamlar </span>
<span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;This regular expression example was made in January 12,  2022.&#39;</span>
<span class="token keyword">const</span> matches <span class="token operator">=</span> txt<span class="token punctuation">.</span> <span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">)</span>  <span class="token comment">// [&quot;12&quot;, &quot;2022&quot;], bu biz xohlagan narsa emas</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bir-yoki-bir-necha-marta" tabindex="-1"><a class="header-anchor" href="#bir-yoki-bir-necha-marta" aria-hidden="true">#</a> Bir yoki bir necha marta (+)</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>  <span class="token comment">//  d - bu raqamlarni bildiruvchi maxsus belgi </span>
<span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;This regular expression example was made in January 12,  2022.&#39;</span>
<span class="token keyword">const</span> matches <span class="token operator">=</span> txt<span class="token punctuation">.</span> <span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">)</span>  <span class="token comment">// [&quot;12&quot;, &quot;2022&quot;], bu biz xohlagan narsa emas</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="davr" tabindex="-1"><a class="header-anchor" href="#davr" aria-hidden="true">#</a> Davr(.)</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[a].</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>  <span class="token comment">// bu kvadrat qavs a va . ni bildiradi. yangi qatordan tashqari har qanday belgini bildiradi</span>
<span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;Apple and banana are fruits&#39;</span>
<span class="token keyword">const</span> matches <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">)</span>  <span class="token comment">// [&quot;an&quot;, &quot;an&quot;, &quot;an&quot;, &quot;a &quot;, &quot;ar&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[a].+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>  <span class="token comment">// . har qanday belgi, + har qanday belgi bir yoki bir necha marta </span>
<span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;Apple and banana are fruits&#39;</span>
<span class="token keyword">const</span> matches <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">)</span>  <span class="token comment">// [&#39;and banana are fruits&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nol-yoki-ko-p-marta" tabindex="-1"><a class="header-anchor" href="#nol-yoki-ko-p-marta" aria-hidden="true">#</a> Nol yoki ko&#39;p marta (*)</h3><p>Nol yoki ko&#39;p marta. Shakl paydo bo&#39;lmasligi yoki ko&#39;p marta paydo bo&#39;lishi mumkin.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
<span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[a].*</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>  <span class="token comment">//. har qanday belgi, + har qanday belgi bir yoki bir necha marta </span>
<span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;Apple and banana are fruits&#39;</span>
<span class="token keyword">const</span> matches <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">)</span>  <span class="token comment">// [&#39;and banana are fruits&#39;]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nol-yoki-bir-marta" tabindex="-1"><a class="header-anchor" href="#nol-yoki-bir-marta" aria-hidden="true">#</a> Nol yoki bir marta(?)</h3><p>Nol yoki bir marta. Shakl paydo bo&#39;lmasligi yoki bir marta paydo bo&#39;lishi mumkin.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;I am not sure if there is a convention how to write the word e-mail.\\
Some people write it email others may write it as Email or E-mail.&#39;</span>
<span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[Ee]-?mail</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>  <span class="token comment">// ? ixtiyoriy ekanligini anglatadi</span>
matches <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">)</span>  <span class="token comment">// [&quot;e-mail&quot;, &quot;email&quot;, &quot;Email&quot;, &quot;E-mail&quot;]</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="regexp-dagi-kvant" tabindex="-1"><a class="header-anchor" href="#regexp-dagi-kvant" aria-hidden="true">#</a> RegExp-dagi kvant</h3><p>Biz jingalak qavsdan foydalanib, matndan izlayotgan pastki qator uzunligini belgilashimiz mumkin. Tasavvur qilaylik, biz ularning uzunligi 4 ta belgidan iborat bo&#39;lgan pastki qatorga qiziqamiz</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;This regular expression example was made in December 6,  2019.&#39;</span>
<span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d{4}</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>  <span class="token comment">// aniq to&#39;rt marta </span>
<span class="token keyword">const</span> matches <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">)</span>  <span class="token comment">// [&#39;2019&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;This regular expression example was made in December 6,  2019.&#39;</span>
<span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d{1,4}</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>   <span class="token comment">// 1 dan 4 gacha </span>
<span class="token keyword">const</span> matches <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">)</span>  <span class="token comment">// [&#39;6&#39;, &#39;2019&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cart" tabindex="-1"><a class="header-anchor" href="#cart" aria-hidden="true">#</a> Cart ^</h3><ul><li>bilan boshlanadi</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;This regular expression example was made in December 6,  2019.&#39;</span>
<span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^This</span><span class="token regex-delimiter">/</span></span> <span class="token comment">// ^ bilan boshlanadi degan ma&#39;noni anglatadi </span>
<span class="token keyword">const</span> matches <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">)</span>  <span class="token comment">// [&#39;This&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Inkor qilish</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> txt <span class="token operator">=</span> <span class="token string">&#39;This regular expression example was made in December 6,  2019.&#39;</span>
<span class="token keyword">const</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^A-Za-z,. ]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>  <span class="token comment">// ^to&#39;plamdagi belgi inkorni anglatadi, A dan Zgacha emas, a dan z gacha, bo&#39;sh joy, vergul yo&#39;q, davr </span>
<span class="token keyword">const</span> matches <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>matches<span class="token punctuation">)</span>  <span class="token comment">// [&quot;6&quot;, &quot;2019&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="aniq-moslik" tabindex="-1"><a class="header-anchor" href="#aniq-moslik" aria-hidden="true">#</a> Aniq moslik</h3><p>Unda ^ boshlanishi va $ oxiri bo&#39;lishi kerak.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> pattern <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[A-Z][a-z]{3,12}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
<span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">&#39;Asabeneh&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> pattern<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ðŸŒ• Siz uzoqqa ketyapsiz. Davom eting! Endi siz muntazam ifoda kuchiga egasiz. Siz har qanday matnni ajratib olish va tozalash imkoniyatiga egasiz va tuzilmagan ma&#39;lumotlardan ma&#39;no yaratishingiz mumkin. Siz hozirgina 12 kunlik sinovlarni yakunladingiz va siz buyuklik sari 12 qadam oldindasiz. Endi miyangiz va mushaklaringiz uchun bir nechta mashqlarni bajaring.</p><h2 id="ðŸ’»-mashqlar" tabindex="-1"><a class="header-anchor" href="#ðŸ’»-mashqlar" aria-hidden="true">#</a> ðŸ’» Mashqlar</h2><h3 id="mashqlar-level-1" tabindex="-1"><a class="header-anchor" href="#mashqlar-level-1" aria-hidden="true">#</a> Mashqlar: Level 1</h3><ol><li>Quyidagi matndan shaxsning umumiy yillik daromadini hisoblang. &quot;U oyiga maoshdan 4000 yevro, yillik 10000 evro bonus, oyiga 5500 evro onlayn kurslar oladi.&quot;</li><li>Ba&#39;zi zarrachalarning gorizontal x o&#39;qidagi o&#39;rni -12, -4, -3 va -1 manfiy yo&#39;nalishda, 0 ga kelib, 4 va 8 musbat yo&#39;nalishda. Ushbu raqamlarni ajratib oling va ikkita eng uzoq zarrachalar orasidagi masofani toping.</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>points <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;-1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;-1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;8&#39;</span><span class="token punctuation">]</span>
sortedPoints <span class="token operator">=</span>  <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>
distance <span class="token operator">=</span> <span class="token number">12</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><p>String haqiqiy JavaScript oÊ»zgaruvchisi ekanligini aniqlaydigan naqsh yozing</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>is_valid_variable<span class="token punctuation">(</span><span class="token string">&#39;first_name&#39;</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
is_valid_variable<span class="token punctuation">(</span><span class="token string">&#39;first-name&#39;</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
is_valid_variable<span class="token punctuation">(</span><span class="token string">&#39;1first_name&#39;</span><span class="token punctuation">)</span> <span class="token comment"># False</span>
is_valid_variable<span class="token punctuation">(</span><span class="token string">&#39;firstname&#39;</span><span class="token punctuation">)</span> <span class="token comment"># True</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="mashqlar-level-2" tabindex="-1"><a class="header-anchor" href="#mashqlar-level-2" aria-hidden="true">#</a> Mashqlar: Level 2</h3><ol><li><p>Satrdan eng tez-tez uchraydigan o&#39;nta so&#39;zni oladigan <strong>tenMostFrequentWords</strong> funksiyasini yozing ?</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>    paragraph <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">I love teaching. If you do not love teaching what else can you love. I love Python if you do not love something which can give you all the capabilities to develop an application what else can you love.</span><span class="token template-punctuation string">\`</span></span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">tenMostFrequentWords</span><span class="token punctuation">(</span>paragraph<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>    <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>word:<span class="token string">&#39;love&#39;</span>, count:6<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;you&#39;</span>, count:5<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;can&#39;</span>, count:3<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;what&#39;</span>, count:2<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;teaching&#39;</span>, count:2<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;not&#39;</span>, count:2<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;else&#39;</span>, count:2<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;do&#39;</span>, count:2<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;I&#39;</span>, count:2<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;which&#39;</span>, count:1<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;to&#39;</span>, count:1<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;the&#39;</span>, count:1<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;something&#39;</span>, count:1<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;if&#39;</span>, count:1<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;give&#39;</span>, count:1<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;develop&#39;</span>,count:1<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;capabilities&#39;</span>,count:1<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;application&#39;</span>, count:1<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;an&#39;</span>,count:1<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;all&#39;</span>,count:1<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;Python&#39;</span>,count:1<span class="token punctuation">}</span>,
    <span class="token punctuation">{</span>word:<span class="token string">&#39;If&#39;</span>,count:1<span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">tenMostFrequentWords</span><span class="token punctuation">(</span>paragraph<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span><span class="token punctuation">{</span>word:<span class="token string">&#39;love&#39;</span>, count:6<span class="token punctuation">}</span>,
<span class="token punctuation">{</span>word:<span class="token string">&#39;you&#39;</span>, count:5<span class="token punctuation">}</span>,
<span class="token punctuation">{</span>word:<span class="token string">&#39;can&#39;</span>, count:3<span class="token punctuation">}</span>,
<span class="token punctuation">{</span>word:<span class="token string">&#39;what&#39;</span>, count:2<span class="token punctuation">}</span>,
<span class="token punctuation">{</span>word:<span class="token string">&#39;teaching&#39;</span>, count:2<span class="token punctuation">}</span>,
<span class="token punctuation">{</span>word:<span class="token string">&#39;not&#39;</span>, count:2<span class="token punctuation">}</span>,
<span class="token punctuation">{</span>word:<span class="token string">&#39;else&#39;</span>, count:2<span class="token punctuation">}</span>,
<span class="token punctuation">{</span>word:<span class="token string">&#39;do&#39;</span>, count:2<span class="token punctuation">}</span>,
<span class="token punctuation">{</span>word:<span class="token string">&#39;I&#39;</span>, count:2<span class="token punctuation">}</span>,
<span class="token punctuation">{</span>word:<span class="token string">&#39;which&#39;</span>, count:1<span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="mashqlar-level-3" tabindex="-1"><a class="header-anchor" href="#mashqlar-level-3" aria-hidden="true">#</a> Mashqlar: Level 3</h3><ol><li>Matnni tozalaydigan funksiya yozing. Quyidagi matnni tozalang. Tozalashdan so&#39;ng, satrda eng ko&#39;p uchraydigan uchta so&#39;zni hisoblang.</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>  sentence <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">%I $am@% a %tea@cher%, &amp;and&amp; I lo%#ve %tea@ching%;. There $is nothing; &amp;as&amp; mo@re rewarding as educa@ting &amp;and&amp; @emp%o@wering peo@ple. ;I found tea@ching m%o@re interesting tha@n any other %jo@bs. %Do@es thi%s mo@tivate yo@u to be a tea@cher!?</span><span class="token template-punctuation string">\`</span></span>

 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">cleanText</span><span class="token punctuation">(</span>sentence<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> I am a teacher and I love teaching There is nothing as <span class="token function">more</span> rewarding as educating and empowering people I found teaching <span class="token function">more</span> interesting than any other <span class="token function">jobs</span> Does this motivate you to be a teacher
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li><p>Write a function which find the most frequent words. After cleaning, count three most frequent words in the string.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">mostFrequentWords</span><span class="token punctuation">(</span>cleanedText<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">word</span><span class="token operator">:</span><span class="token string">&#39;I&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">word</span><span class="token operator">:</span><span class="token string">&#39;teaching&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">word</span><span class="token operator">:</span><span class="token string">&#39;teacher&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">count</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,50);function l(c,r){return s(),e("div",null,[o,t(" ![Regular Expression cheat sheet](../images/regex.png) "),p])}const d=n(i,[["render",l],["__file","12-dars.html.vue"]]);export{d as default};
