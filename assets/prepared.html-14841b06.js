import{_ as a,o as n,c as s,a as t}from"./app-1c9dd427.js";const e={},o=t(`<h1 id="ðŸ“”-mysql-prepared-statements" tabindex="-1"><a class="header-anchor" href="#ðŸ“”-mysql-prepared-statements" aria-hidden="true">#</a> ðŸ“” MySQL Prepared Statements</h1><h2 id="mysql-prepared-statements-mysql-tomonidan-tayyorlangan-bayonotlar" tabindex="-1"><a class="header-anchor" href="#mysql-prepared-statements-mysql-tomonidan-tayyorlangan-bayonotlar" aria-hidden="true">#</a> MySQL Prepared Statements (MySQL tomonidan tayyorlangan bayonotlar)</h2><p>Tayyorlangan bayonotlar SQL in&#39;ektsiyalariga qarshi juda foydali.</p><p>Tayyorlangan bayonotlar va bog&#39;langan parametrlar</p><p>Tayyorlangan bayonot bir xil (yoki shunga o&#39;xshash) SQL ko&#39;rsatmalarini yuqori samaradorlik bilan qayta-qayta bajarish uchun ishlatiladigan xususiyatdir.</p><p>Tayyorlangan bayonotlar asosan shunday ishlaydi:</p><ol><li>Tayyorlang: SQL bayonoti shabloni yaratiladi va ma&#39;lumotlar bazasiga yuboriladi. Muayyan qiymatlar parametrlar deb ataladigan (&quot;?&quot; etiketli) belgilanmagan holda qoldiriladi. Misol: MyGuests VALUES INSERT INTO (?, ?, ?)</li><li>Ma&#39;lumotlar bazasi SQL bayonoti shablonida so&#39;rovlarni optimallashtirishni tahlil qiladi, kompilyatsiya qiladi va amalga oshiradi va natijani bajarmasdan saqlaydi.</li><li>Amalga oshirish: Keyinchalik, dastur qiymatlarni parametrlarga bog&#39;laydi va ma&#39;lumotlar bazasi bayonotni bajaradi. Ilova bayonotni xohlagancha turli qiymatlar bilan bajarishi mumkin</li></ol><p>To&#39;g&#39;ridan-to&#39;g&#39;ri SQL bayonotlarini bajarish bilan solishtirganda, tayyorlangan bayonotlar uchta asosiy afzalliklarga ega:</p><ul><li>Tayyorlangan bayonotlar tahlil qilish vaqtini qisqartiradi, chunki so&#39;rovga tayyorgarlik faqat bir marta amalga oshiriladi (bayonot bir necha marta bajarilgan bo&#39;lsa ham)</li><li>Bog&#39;langan parametrlar serverga o&#39;tkazish qobiliyatini kamaytiradi, chunki siz har safar butun so&#39;rovni emas, balki faqat parametrlarni yuborishingiz kerak.</li><li>Tayyorlangan bayonotlar SQL in&#39;ektsiyalariga qarshi juda foydali, chunki keyinchalik boshqa protokol yordamida uzatiladigan parametr qiymatlaridan to&#39;g&#39;ri qochish kerak emas. Agar dastlabki bayonot shablonlari tashqi ma&#39;lumotlardan olinmagan bo&#39;lsa, SQL in&#39;ektsiyasi amalga oshirilmaydi.</li></ul><p>MySQLi-da tayyorlangan bayonotlar</p><p>Quyidagi misol MySQLi-da tayyorlangan bayonotlar va bog&#39;langan parametrlardan foydalanadi:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$servername</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;localhost&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$username</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$password</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;password&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$dbname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;myDB&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// Create connection</span>
<span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mysqli</span><span class="token punctuation">(</span><span class="token variable">$servername</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">,</span> <span class="token variable">$dbname</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Check connection</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token operator">-&gt;</span><span class="token property">connect_error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Connection failed: &quot;</span> <span class="token operator">.</span> <span class="token variable">$conn</span><span class="token operator">-&gt;</span><span class="token property">connect_error</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// prepare and bind</span>
<span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;INSERT INTO MyGuests (firstname, lastname, email) VALUES (?, ?, ?)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$stmt</span><span class="token operator">-&gt;</span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;sss&quot;</span><span class="token punctuation">,</span> <span class="token variable">$firstname</span><span class="token punctuation">,</span> <span class="token variable">$lastname</span><span class="token punctuation">,</span> <span class="token variable">$email</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// set parameters and execute</span>
<span class="token variable">$firstname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$lastname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Doe&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$email</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;john@example.com&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$stmt</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$firstname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Mary&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$lastname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Moe&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$email</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;mary@example.com&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$stmt</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$firstname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Julie&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$lastname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Dooley&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$email</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;julie@example.com&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$stmt</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;New records created successfully&quot;</span><span class="token punctuation">;</span>

<span class="token variable">$stmt</span><span class="token operator">-&gt;</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$conn</span><span class="token operator">-&gt;</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Yuqoridagi misoldan tushuntirish uchun kod satrlari:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token string double-quoted-string">&quot;INSERT INTO MyGuests (firstname, lastname, email) VALUES (?, ?, ?)&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>SQL-da biz butun son, satr, double yoki blob qiymatini almashtirmoqchi bo&#39;lgan savol belgisini (?) qo&#39;yamiz.</p><p>Keyin bind_param() funktsiyasini ko&#39;rib chiqing:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$stmt</span><span class="token operator">-&gt;</span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;sss&quot;</span><span class="token punctuation">,</span> <span class="token variable">$firstname</span><span class="token punctuation">,</span> <span class="token variable">$lastname</span><span class="token punctuation">,</span> <span class="token variable">$email</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Ushbu funktsiya parametrlarni SQL so&#39;roviga bog&#39;laydi va ma&#39;lumotlar bazasiga parametrlar nima ekanligini aytadi. &quot;sss&quot; argumenti parametrlar bo&#39;lgan ma&#39;lumotlar turlarini ko&#39;rsatadi. s belgisi MySQL-ga parametrning satr ekanligini bildiradi.</p><p>Argument to&#39;rt turdan biri bo&#39;lishi mumkin:</p><ul><li>i - butun son</li><li>d - ikki barobar</li><li>s - qator</li><li>b - BLOB</li></ul><p>Har bir parametr uchun bizda ulardan bittasi bo&#39;lishi kerak.</p><p>MySQL-ga qanday turdagi ma&#39;lumotlarni kutish kerakligini aytib, biz SQL in&#39;ektsiyalari xavfini minimallashtiramiz.</p><div class="custom-container warning"><p class="custom-container-title">Eslatma</p><p>Eslatma: Agar biz tashqi manbalardan biron-bir ma&#39;lumotni (masalan, foydalanuvchi kiritishi) kiritmoqchi bo&#39;lsak, ma&#39;lumotlarning tozalanganligi va tasdiqlanganligi juda muhimdir.</p></div><p>PDO da tayyorlangan bayonotlar Quyidagi misolda PDO-da tayyorlangan bayonotlar va bog&#39;langan parametrlar qo&#39;llaniladi:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$servername</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;localhost&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$username</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;username&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$password</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;password&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$dbname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;myDBPDO&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;mysql:host=<span class="token interpolation"><span class="token variable">$servername</span></span>;dbname=<span class="token interpolation"><span class="token variable">$dbname</span></span>&quot;</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// set the PDO error mode to exception</span>
  <span class="token variable">$conn</span><span class="token operator">-&gt;</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ATTR_ERRMODE</span><span class="token punctuation">,</span> <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">ERRMODE_EXCEPTION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// prepare sql and bind parameters</span>
  <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;INSERT INTO MyGuests (firstname, lastname, email)
  VALUES (:firstname, :lastname, :email)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$stmt</span><span class="token operator">-&gt;</span><span class="token function">bindParam</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;:firstname&#39;</span><span class="token punctuation">,</span> <span class="token variable">$firstname</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$stmt</span><span class="token operator">-&gt;</span><span class="token function">bindParam</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;:lastname&#39;</span><span class="token punctuation">,</span> <span class="token variable">$lastname</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token variable">$stmt</span><span class="token operator">-&gt;</span><span class="token function">bindParam</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;:email&#39;</span><span class="token punctuation">,</span> <span class="token variable">$email</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// insert a row</span>
  <span class="token variable">$firstname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;John&quot;</span><span class="token punctuation">;</span>
  <span class="token variable">$lastname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Doe&quot;</span><span class="token punctuation">;</span>
  <span class="token variable">$email</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;john@example.com&quot;</span><span class="token punctuation">;</span>
  <span class="token variable">$stmt</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// insert another row</span>
  <span class="token variable">$firstname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Mary&quot;</span><span class="token punctuation">;</span>
  <span class="token variable">$lastname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Moe&quot;</span><span class="token punctuation">;</span>
  <span class="token variable">$email</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;mary@example.com&quot;</span><span class="token punctuation">;</span>
  <span class="token variable">$stmt</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// insert another row</span>
  <span class="token variable">$firstname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Julie&quot;</span><span class="token punctuation">;</span>
  <span class="token variable">$lastname</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Dooley&quot;</span><span class="token punctuation">;</span>
  <span class="token variable">$email</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;julie@example.com&quot;</span><span class="token punctuation">;</span>
  <span class="token variable">$stmt</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;New records created successfully&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">PDOException</span> <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Error: &quot;</span> <span class="token operator">.</span> <span class="token variable">$e</span><span class="token operator">-&gt;</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25),p=[o];function i(l,r){return n(),s("div",null,p)}const u=a(e,[["render",i],["__file","prepared.html.vue"]]);export{u as default};
