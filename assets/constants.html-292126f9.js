import{_ as n,o as a,c as s,a as i}from"./app-1c9dd427.js";const o={},t=i(`<h1 id="ðŸ“”-php-oop-class-constants" tabindex="-1"><a class="header-anchor" href="#ðŸ“”-php-oop-class-constants" aria-hidden="true">#</a> ðŸ“” PHP OOP - Class Constants</h1><h2 id="php-oop-class-constants-oop-sinf-doimiylari" tabindex="-1"><a class="header-anchor" href="#php-oop-class-constants-oop-sinf-doimiylari" aria-hidden="true">#</a> PHP OOP - Class Constants (OOP - Sinf doimiylari)</h2><p>E&#39;lon qilingandan keyin doimiylarni o&#39;zgartirib bo&#39;lmaydi.</p><p>Agar siz sinf ichida ba&#39;zi doimiy ma&#39;lumotlarni belgilashingiz kerak bo&#39;lsa, sinf konstantalari foydali bo&#39;lishi mumkin.</p><p>Sinf konstantasi kalit so&#39;z bilan sinf ichida e&#39;lon qilinadi const .</p><p>Sinf konstantalari katta-kichik harflarga sezgir. Shu bilan birga, doimiylarni barcha katta harflar bilan nomlash tavsiya etiladi.</p><p>::Biz sinf nomidan so&#39;ng doirani aniqlash operatori ( ) va undan keyin doimiy nomdan foydalanib, sinfdan tashqaridagi konstantaga kirishimiz mumkin , masalan:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">Goodbye</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token constant">LEAVING_MESSAGE</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Thank you for visiting W3Schools.com!&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">echo</span> <span class="token class-name static-context">Goodbye</span><span class="token operator">::</span><span class="token constant">LEAVING_MESSAGE</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Yoki biz sinf ichidan konstantaga kalit selfsoâ€˜zdan soâ€˜ng miqyosni aniqlash operatori ( :ðŸ˜ƒ soâ€˜ng doimiy nomidan foydalanishimiz mumkin, masalan:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">Goodbye</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token constant">LEAVING_MESSAGE</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Thank you for visiting W3Schools.com!&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">byebye</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token constant">LEAVING_MESSAGE</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token variable">$goodbye</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Goodbye</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$goodbye</span><span class="token operator">-&gt;</span><span class="token function">byebye</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),e=[t];function p(l,c){return a(),s("div",null,e)}const r=n(o,[["render",p],["__file","constants.html.vue"]]);export{r as default};
