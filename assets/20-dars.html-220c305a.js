import{_ as e,r as p,o,c as l,d as a,f as n,e as t,a as i}from"./app-d17e5b05.js";const c={},r=i('<h1 id="ðŸ“”-20-dars" tabindex="-1"><a class="header-anchor" href="#ðŸ“”-20-dars" aria-hidden="true">#</a> ðŸ“” 20-dars</h1><h2 id="toza-kod-yozish" tabindex="-1"><a class="header-anchor" href="#toza-kod-yozish" aria-hidden="true">#</a> Toza kod yozish</h2><h3 id="javascript-style-guide-uslublar-bo-yicha-qo-llanma" tabindex="-1"><a class="header-anchor" href="#javascript-style-guide-uslublar-bo-yicha-qo-llanma" aria-hidden="true">#</a> JavaScript Style Guide(Uslublar bo&#39;yicha qo&#39;llanma)</h3><p>JavaScript uslubi uchun qo&#39;llanma - bu JavaScript kodini qanday yozish va tartibga solish kerakligini ko&#39;rsatadigan standartlar to&#39;plami. Ushbu bo&#39;limda biz JavaScript qo&#39;llanmalari va toza kodni qanday yozish haqida gaplashamiz.</p><p>JavaScript - bu dasturlash tili va inson tili kabi sintaksisga ega. JavaScript sintaksisi ishonchli va sodda bo&#39;lishi uchun ma&#39;lum bir uslub ko&#39;rsatmalariga muvofiq yozilishi kerak.</p><h3 id="nima-uchun-bizga-uslublar-bo-yicha-qo-llanma-kerak" tabindex="-1"><a class="header-anchor" href="#nima-uchun-bizga-uslublar-bo-yicha-qo-llanma-kerak" aria-hidden="true">#</a> Nima uchun bizga uslublar bo&#39;yicha qo&#39;llanma kerak</h3><p>Siz uzoq vaqtdan beri yolg&#39;iz kodlashdingiz, lekin hozir u jamoada ishlayotganga o&#39;xshaydi. Baribir, u ishlayotgan ekan, kod yozishingiz muhim emas, lekin bitta loyihada va bir xil kod bazasida 10 yoki 20 yoki undan ortiq dasturchidan iborat jamoada ishlaganingizda, kod tartibsiz va agar mavjud bo&#39;lsa, uni boshqarish qiyin bo&#39;ladi. amal qilish uchun hech qanday ko&#39;rsatmalar yo&#39;q.</p><p>Siz o&#39;zingizning ko&#39;rsatmalaringiz va konventsiyalaringizni ishlab chiqishingiz yoki yaxshi ishlab chiqilgan ko&#39;rsatmalarni moslashingiz mumkin. Keling, eng keng tarqalgan ko&#39;rsatmalarni bilib olaylik. Eng keng tarqalgan JavaScript uslubiy qo&#39;llanmalar:</p><ul><li>Airbnb JavaScript Style Guide</li><li>JavaScript Standard Style Guide</li><li>Google JavaScript Style Guide</li></ul><h4 id="airbnb-javascript-style-guide" tabindex="-1"><a class="header-anchor" href="#airbnb-javascript-style-guide" aria-hidden="true">#</a> Airbnb JavaScript Style Guide</h4>',10),u={href:"https://github.com/airbnb/javascript",target:"_blank",rel:"noopener noreferrer"},k=a("h4",{id:"standard-javascript-style-guide",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#standard-javascript-style-guide","aria-hidden":"true"},"#"),n(" Standard JavaScript Style Guide")],-1),d={href:"https://standardjs.com/",target:"_blank",rel:"noopener noreferrer"},v=a("h4",{id:"google-javascript-style-guide",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#google-javascript-style-guide","aria-hidden":"true"},"#"),n(" Google JavaScript Style Guide")],-1),m={href:"https://google.github.io/styleguide/jsguide.html",target:"_blank",rel:"noopener noreferrer"},b=i(`<h3 id="javascript-kodlash-konventsiyalari" tabindex="-1"><a class="header-anchor" href="#javascript-kodlash-konventsiyalari" aria-hidden="true">#</a> JavaScript kodlash konventsiyalari</h3><p>Ushbu muammoni hal qilishda biz umumiy JavaScript kodlash yozish qoidalari va qo&#39;llanmalaridan ham foydalandik. Kodlash konventsiyalari - bu shaxs, jamoa yoki kompaniya tomonidan ishlab chiqilgan dasturlash uslubi bo&#39;yicha ko&#39;rsatmalar.</p><p>Kodlash konventsiyalari yordam beradi:</p><ul><li>toza kod yozish uchun</li><li>kodni o&#39;qishni yaxshilash uchun</li><li>kodni qayta ishlatish va texnik xizmat ko&#39;rsatishni yaxshilash</li></ul><p>Kodlash konventsiyalari o&#39;z ichiga oladi</p><ul><li>O&#39;zgaruvchilar uchun nom berish va e&#39;lon qilish qoidalari</li><li>Funktsiyalarni nomlash va e&#39;lon qilish qoidalari</li><li>Oq bo&#39;shliq, chekinish va sharhlardan foydalanish qoidalari</li><li>Dasturlash amaliyoti va tamoyillari</li></ul><h4 id="konventsiyalar-30daysofjavascript-da-qo-llaniladi" tabindex="-1"><a class="header-anchor" href="#konventsiyalar-30daysofjavascript-da-qo-llaniladi" aria-hidden="true">#</a> Konventsiyalar 30DaysOfJavaScript-da qo&#39;llaniladi</h4><p>Ushbu tanlovda biz odatiy JavaScript konventsiyasiga amal qilamiz, lekin men yozishni afzal ko&#39;rganimni ham qo&#39;shdim.</p><ul><li>Biz o&#39;zgaruvchilar va funktsiyalar uchun camelCase-dan foydalandik.</li><li>Barcha o&#39;zgaruvchilar nomlari harf bilan boshlanadi.</li><li>Biz konstantalar, massivlar, obyektlar va funksiyalar uchun const dan foydalanishni tanladik . Ikki tirnoq o&#39;rniga biz bitta qo&#39;shtirnoq yoki teskari belgidan foydalanishni tanladik. Yagona tirnoq modaga aylanib bormoqda.</li><li>Kodimizdan nuqtali vergulni ham olib tashladik, ammo bu shaxsiy imtiyozlar masalasidir.</li><li>Arifmetik operatorlar, belgilash operatorlari atrofida va verguldan keyin bo&#39;sh joy</li><li>Funktsiya deklaratsiyasi o&#39;rniga o&#39;q funktsiyasi</li><li>Agar funktsiya bitta chiziq bo&#39;lsa, yashirin qaytish o&#39;rniga aniq qaytish</li><li>Ob&#39;ektning oxirgi qiymatida oxirgi vergul yo&#39;q</li><li>Biz uzunroq versiya o&#39;rniga +=, -=, *= /=, **= ma&#39;qullaymiz</li><li>Biz console.log() dan foydalanganda, konsol qayerdan kelayotganini aniqlash uchun teglar qatori bilan chop etish yaxshidir.</li></ul><h4 id="o-zgaruvchilar" tabindex="-1"><a class="header-anchor" href="#o-zgaruvchilar" aria-hidden="true">#</a> O&#39;zgaruvchilar</h4><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>
<span class="token keyword">let</span> firstName <span class="token operator">=</span> <span class="token string">&#39;Asabeneh&#39;</span>
<span class="token keyword">let</span> lastName <span class="token operator">=</span> <span class="token string">&#39;Yetayeh&#39;</span>
<span class="token keyword">let</span> country <span class="token operator">=</span> <span class="token string">&#39;Finland&#39;</span>
<span class="token keyword">let</span> city <span class="token operator">=</span> <span class="token string">&#39;Helsinki&#39;</span>

<span class="token keyword">const</span> <span class="token constant">PI</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span>
<span class="token keyword">const</span> gravity <span class="token operator">=</span> <span class="token number">9.81</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="massivlar" tabindex="-1"><a class="header-anchor" href="#massivlar" aria-hidden="true">#</a> Massivlar</h4><p>Biz massiv nomlarini koâ€˜plik qilishni tanladik</p><ul><li>names</li><li>numbers</li><li>countries</li><li>languages</li><li>skills</li><li>fruits</li><li>vegetables</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// arrays</span>
<span class="token keyword">const</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Asabeneh&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Mathias&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Elias&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Brook&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> numbers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3.14</span><span class="token punctuation">,</span> <span class="token number">9.81</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">98.6</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> countries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Finland&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Denmark&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Sweden&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Norway&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Iceland&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> languages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Amharic&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Arabic&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;English&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;French&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Spanish&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> skills <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;React&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Python&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> fruits <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;banana&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;orange&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;mango&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;lemon&#39;</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> vegetables <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Tomato&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Potato&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Cabbage&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Onion&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Carrot&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="funksiyalar" tabindex="-1"><a class="header-anchor" href="#funksiyalar" aria-hidden="true">#</a> Funksiyalar</h4><p>Hozircha siz funksiya deklaratsiyasi, ifoda funksiyasi, strelka funksiyasi va anonim funksiyani juda yaxshi bilasiz. Ushbu muammoni hal qilishda biz boshqa funktsiyalar o&#39;rniga o&#39;q funktsiyasidan foydalanamiz. Ok funksiyasi boshqa funksiyalarni almashtirmaydi. Bundan tashqari, o&#39;q funktsiyalari va funksiya deklaratsiyasi mutlaqo bir xil emas. Shuning uchun siz qachon va qachon foydalanmasligingizni bilishingiz kerak. Farqni boshqa bo&#39;limlarda batafsil yoritib beraman. Agar funktsiya bitta chiziq bo&#39;lsa, biz yashirin qaytarish o&#39;rniga aniq qaytarishdan foydalanamiz</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// shaxsning toÊ»liq ismini chop etadigan funksiya </span>
<span class="token keyword">const</span> <span class="token function-variable function">printFullName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">firstName<span class="token punctuation">,</span> lastName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> firstName <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> lastName

<span class="token comment">// sonning kvadratini hisoblaydigan funksiya </span>
<span class="token keyword">const</span> <span class="token function-variable function">square</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> n <span class="token operator">*</span> n

<span class="token comment">// tasodifiy hexa ranglarini yaratuvchi funktsiya </span>
<span class="token keyword">const</span> <span class="token function-variable function">hexaColor</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;0123456789abcdef&#39;</span>
  <span class="token keyword">let</span> hexa <span class="token operator">=</span> <span class="token string">&#39;#&#39;</span>
  <span class="token keyword">let</span> index
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    index <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> str<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    hexa <span class="token operator">+=</span> str<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> hexa
<span class="token punctuation">}</span>

<span class="token comment">// sana va vaqtni ko&#39;rsatadigan funktsiya</span>
<span class="token keyword">const</span> <span class="token function-variable function">showDateTime</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> year <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> month <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token keyword">const</span> date <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> hours <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> minutes <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>hours <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    hours <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">+</span> hours
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>minutes <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    minutes <span class="token operator">=</span> <span class="token string">&#39;0&#39;</span> <span class="token operator">+</span> minutes
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> dateMonthYear <span class="token operator">=</span> date <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> month <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span> <span class="token operator">+</span> year
  <span class="token keyword">const</span> time <span class="token operator">=</span> hours <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> minutes
  <span class="token keyword">const</span> fullTime <span class="token operator">=</span> dateMonthYear <span class="token operator">+</span> <span class="token string">&#39; &#39;</span> <span class="token operator">+</span> time
  <span class="token keyword">return</span> fullTime
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="tsikllar" tabindex="-1"><a class="header-anchor" href="#tsikllar" aria-hidden="true">#</a> Tsikllar</h4><p>Ushbu qiyinchiliklarda biz ko&#39;p turdagi halqalarni ko&#39;rib chiqamiz. Muntazam for sikli, while sikli, do while sikli, for of loop, forEach tsikli va for in tsikli. Keling, ulardan qanday foydalanishimizni ko&#39;rib chiqaylik:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// massiv oÊ»zgaruvchisini eÊ¼lon qilish</span>
<span class="token keyword">const</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Asabeneh&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Mathias&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Elias&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Brook&#39;</span><span class="token punctuation">]</span>

<span class="token comment">//  massivni muntazam for siklidan foydalanib iteratsiya qilish</span>
<span class="token keyword">let</span> len <span class="token operator">=</span> names<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>names<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>


<span class="token comment">// for of yordamida massivni takrorlash</span>
<span class="token keyword">for</span><span class="token punctuation">(</span> <span class="token keyword">const</span> name <span class="token keyword">of</span> names<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">toUpperCasee</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">//  forEach yordamida massivni takrorlash</span>
names<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> name<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>


<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;Asabeneh&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;Yetayeh&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">,</span>
  <span class="token literal-property property">country</span><span class="token operator">:</span> <span class="token string">&#39;Finland&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">&#39;Helsinki&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">skills</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;React&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Node&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;MongoDB&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Python&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;D3.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">isMarried</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="ob-ektlar" tabindex="-1"><a class="header-anchor" href="#ob-ektlar" aria-hidden="true">#</a> Ob&#39;ektlar</h4><p>Biz ob&#39;ektni <strong>const</strong> bilan literal deb e&#39;lon qilamiz .</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// declaring object literal</span>
<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;Asabeneh&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;Yetayeh&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">,</span>
  <span class="token literal-property property">country</span><span class="token operator">:</span> <span class="token string">&#39;Finland&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">&#39;Helsinki&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">skills</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;HTML&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;CSS&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;JavaScript&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;React&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Node&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;MongoDB&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;Python&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;D3.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">isMarried</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
<span class="token comment">// ob&#39;ekt kalitlari orqali iteratsiya</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> person<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> person<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="shartlar" tabindex="-1"><a class="header-anchor" href="#shartlar" aria-hidden="true">#</a> Shartlar</h4><p>Oldingi qiyinchiliklarda if, if other, if another if, switch va uchlik operatorlarni aytamiz.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// sintaksis</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// kodning bu qismi to&#39;g&#39;ri shart uchun ishlaydi </span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
 <span class="token comment">// kodning bu qismi noto&#39;g&#39;ri holat uchun ishlaydi </span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// if else</span>
<span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">3</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>num<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is a positive number</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>num<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is a negative number</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">//  3 is a positive number</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// if else if else if else</span>

<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>a<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is a positive number</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>a<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is a negative number</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>a<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is zero</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>a<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is not a number</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Switch More Examples</span>
<span class="token keyword">let</span> dayUserInput <span class="token operator">=</span> <span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">&#39;What day is today ?&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> day <span class="token operator">=</span> dayUserInput<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">switch</span> <span class="token punctuation">(</span>day<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">case</span> <span class="token string">&#39;monday&#39;</span><span class="token operator">:</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Today is Monday&#39;</span><span class="token punctuation">)</span>
   <span class="token keyword">break</span>
 <span class="token keyword">case</span> <span class="token string">&#39;tuesday&#39;</span><span class="token operator">:</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Today is Tuesday&#39;</span><span class="token punctuation">)</span>
   <span class="token keyword">break</span>
 <span class="token keyword">case</span> <span class="token string">&#39;wednesday&#39;</span><span class="token operator">:</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Today is Wednesday&#39;</span><span class="token punctuation">)</span>
   <span class="token keyword">break</span>
 <span class="token keyword">case</span> <span class="token string">&#39;thursday&#39;</span><span class="token operator">:</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Today is Thursday&#39;</span><span class="token punctuation">)</span>
   <span class="token keyword">break</span>
 <span class="token keyword">case</span> <span class="token string">&#39;friday&#39;</span><span class="token operator">:</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Today is Friday&#39;</span><span class="token punctuation">)</span>
   <span class="token keyword">break</span>
 <span class="token keyword">case</span> <span class="token string">&#39;saturday&#39;</span><span class="token operator">:</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Today is Saturday&#39;</span><span class="token punctuation">)</span>
   <span class="token keyword">break</span>
 <span class="token keyword">case</span> <span class="token string">&#39;sunday&#39;</span><span class="token operator">:</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Today is Sunday&#39;</span><span class="token punctuation">)</span>
   <span class="token keyword">break</span>
 <span class="token keyword">default</span><span class="token operator">:</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;It is not a week day.&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// ternary</span>

<span class="token keyword">let</span> isRaining <span class="token operator">=</span> <span class="token boolean">true</span>
isRaining
 <span class="token operator">?</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;You need a rain coat.&#39;</span><span class="token punctuation">)</span>
 <span class="token operator">:</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;No need for a rain coat.&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="klasslar" tabindex="-1"><a class="header-anchor" href="#klasslar" aria-hidden="true">#</a> Klasslar</h4><p>Biz katta harf bilan boshlanadigan CamelCase bilan sinfni e&#39;lon qilamiz.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// sintaksis </span>
<span class="token keyword">class</span> <span class="token class-name">ClassName</span> <span class="token punctuation">{</span>
    <span class="token comment">// code goes here</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// defining class</span>
<span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">firstName<span class="token punctuation">,</span> lastName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token comment">// Check the output from here</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>firstName <span class="token operator">=</span> firstName
    <span class="token keyword">this</span><span class="token punctuation">.</span>lastName <span class="token operator">=</span> lastName
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Qaysi uslub qo&#39;llanmasiga amal qilsangiz, izchil bo&#39;ling. Ba&#39;zi dasturlash paradigmalari va dizayn naqshlariga amal qiling. Esingizda bo&#39;lsin, agar siz kodingizni ma&#39;lum tartibda yoki uslubda yozmasangiz, kodingizni o&#39;qish qiyin bo&#39;ladi. Shunday qilib, o&#39;zingiz uchun yoki o&#39;qilishi mumkin bo&#39;lgan kod yozish orqali kodingizni o&#39;qimoqchi bo&#39;lgan kishi uchun yaxshilik qiling.</p><p>ðŸŒ• Siz tartiblisiz. Endi siz toza kod yozishni bilasiz, shuning uchun ingliz tilini biladigan har bir kishi sizning kodingizni tushunishi mumkin. Siz doimo rivojlanib borasiz va siz buyuklik sari 20 qadam oldindasiz.</p>`,37);function h(g,y){const s=p("ExternalLinkIcon");return o(),l("div",null,[r,a("p",null,[a("a",u,[n("Airbnb style guide"),t(s)]),n(" internetdagi eng mashhur JavaScript uslubiy qo'llanmalaridan biriga ega. U JavaScript-ning deyarli barcha jihatlarini qamrab oladi va u ko'plab ishlab chiquvchilar va kompaniyalar tomonidan qabul qilinadi. Airbnb uslubi bo'yicha qo'llanmani tekshirishingiz mumkin . Men ham sinab ko'rishni tavsiya qilaman. Ularning uslubini ishlatish juda oson va tushunish oson.")]),k,a("p",null,[n("Bu "),a("a",d,[n("style guide"),t(s)]),n(" Airbnb kabi mashhur emas, lekin uni ko'rib chiqishga arziydi. Ular uslubiy qo'llanmada nuqta-vergulni olib tashladilar.")]),v,a("p",null,[n("Men Google yo'riqnomasi haqida ko'p gapirmayman va men foydalanmadim, aksincha, ushbu "),a("a",m,[n("havolani"),t(s)]),n(" ko'rib chiqishingizni tavsiya qilaman.")]),b])}const q=e(c,[["render",h],["__file","20-dars.html.vue"]]);export{q as default};
