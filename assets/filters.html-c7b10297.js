import{_ as n,o as a,c as s,a as t}from"./app-dcb21b78.js";const i={},p=t(`<h1 id="ðŸ“”-php-filters" tabindex="-1"><a class="header-anchor" href="#ðŸ“”-php-filters" aria-hidden="true">#</a> ðŸ“” PHP Filters</h1><h2 id="php-filters-php-filtrlari" tabindex="-1"><a class="header-anchor" href="#php-filters-php-filtrlari" aria-hidden="true">#</a> PHP Filters (PHP filtrlari)</h2><p>Ma&#39;lumotlarni tekshirish = Ma&#39;lumotlar to&#39;g&#39;ri shaklda yoki yo&#39;qligini aniqlang.</p><p>Ma&#39;lumotlarni tozalash = Ma&#39;lumotlardan noqonuniy belgilarni olib tashlang.</p><p>PHP filtri kengaytmasi</p><p>PHP filtrlari tashqi kirishni tekshirish va tozalash uchun ishlatiladi.</p><p>PHP filtri kengaytmasi foydalanuvchi kiritgan ma&#39;lumotlarni tekshirish uchun zarur bo&#39;lgan ko&#39;plab funktsiyalarga ega va ma&#39;lumotlarni tekshirishni oson va tezroq qilish uchun mo&#39;ljallangan.</p><p>Funktsiyadan filter_list()PHP filtri kengaytmasi nimani taklif qilishini ro&#39;yxatga olish uchun foydalanish mumkin:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>Filter Name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">&gt;</span></span>Filter ID<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
  <span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
  <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token function">filter_list</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$id</span> <span class="token operator">=&gt;</span><span class="token variable">$filter</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;&lt;tr&gt;&lt;td&gt;&#39;</span> <span class="token operator">.</span> <span class="token variable">$filter</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;/td&gt;&lt;td&gt;&#39;</span> <span class="token operator">.</span> <span class="token function">filter_id</span><span class="token punctuation">(</span><span class="token variable">$filter</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;/td&gt;&lt;/tr&gt;&#39;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token delimiter important">?&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Nima uchun filtrlardan foydalanish kerak?</p><p>Ko&#39;pgina veb-ilovalar tashqi ma&#39;lumotlarni oladi. Tashqi kirish/ma&#39;lumotlar quyidagilar bo&#39;lishi mumkin:</p><ul><li>Shakldan foydalanuvchi kiritishi</li><li>Cookie-fayllar</li><li>Veb-xizmat ma&#39;lumotlari</li><li>Server o&#39;zgaruvchilari</li><li>Ma&#39;lumotlar bazasi so&#39;rovi natijalari</li></ul><div class="custom-container warning"><p class="custom-container-title">Eslatma</p><p>Siz har doim tashqi ma&#39;lumotlarni tekshirishingiz kerak! Noto&#39;g&#39;ri yuborilgan ma&#39;lumotlar xavfsizlik muammolariga olib kelishi va veb-sahifangizni buzishi mumkin! PHP filtrlaridan foydalanib, ilovangiz to&#39;g&#39;ri kiritilgan ma&#39;lumotlarni olishiga ishonch hosil qilishingiz mumkin!</p></div><p>PHP filter_var() funktsiyasi</p><p>Funktsiya filter_var()ma&#39;lumotlarni ham tekshiradi, ham tozalaydi.</p><p>Funktsiya filter_var()belgilangan filtr bilan bitta o&#39;zgaruvchini filtrlaydi. Buning uchun ikkita ma&#39;lumot kerak bo&#39;ladi:</p><ul><li>Siz tekshirmoqchi bo&#39;lgan o&#39;zgaruvchi</li><li>Foydalanish uchun chek turi</li></ul><p>Stringni tozalash</p><p>Quyidagi misolda filter_var()barcha HTML teglarini satrdan olib tashlash funksiyasidan foydalaniladi:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;&lt;h1&gt;Hello World!&lt;/h1&gt;&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$newstr</span> <span class="token operator">=</span> <span class="token function">filter_var</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token constant">FILTER_SANITIZE_STRING</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token variable">$newstr</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Butun sonni tasdiqlash</p><p>Quyidagi misolda filter_var()$int oÊ»zgaruvchisi butun son ekanligini tekshirish funksiyasidan foydalaniladi. Agar $int butun son bo&#39;lsa, quyidagi kodning chiqishi quyidagicha bo&#39;ladi: &quot;Integer to&#39;g&#39;ri&quot;. Agar $int butun son bo&#39;lmasa, natija quyidagicha bo&#39;ladi: &quot;Integer to&#39;g&#39;ri emas&quot;:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$int</span> <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">filter_var</span><span class="token punctuation">(</span><span class="token variable">$int</span><span class="token punctuation">,</span> <span class="token constant">FILTER_VALIDATE_INT</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Integer is valid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Integer is not valid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Maslahat: filter_var() va 0 bilan muammo</p><p>Yuqoridagi misolda, agar $int 0 ga o&#39;rnatilgan bo&#39;lsa, yuqoridagi funksiya &quot;Integer is not valid&quot; ni qaytaradi. Ushbu muammoni hal qilish uchun quyidagi koddan foydalaning:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$int</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">filter_var</span><span class="token punctuation">(</span><span class="token variable">$int</span><span class="token punctuation">,</span> <span class="token constant">FILTER_VALIDATE_INT</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">filter_var</span><span class="token punctuation">(</span><span class="token variable">$int</span><span class="token punctuation">,</span> <span class="token constant">FILTER_VALIDATE_INT</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Integer is valid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Integer is not valid&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>IP-manzilni tasdiqlang</p><p>Quyidagi misolda filter_var()$ip oÊ»zgaruvchisi toÊ»gÊ»ri IP manzil yoki yoÊ»qligini tekshirish funksiyasidan foydalaniladi:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$ip</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;127.0.0.1&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">filter_var</span><span class="token punctuation">(</span><span class="token variable">$ip</span><span class="token punctuation">,</span> <span class="token constant">FILTER_VALIDATE_IP</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$ip</span></span> is a valid IP address&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$ip</span></span> is not a valid IP address&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Elektron pochta manzilini tozalash va tasdiqlash</p><p>Quyidagi misolda filter_var()$email oÊ»zgaruvchisidan avval barcha noqonuniy belgilarni olib tashlash funksiyasidan foydalaniladi, soÊ»ngra uning toÊ»gÊ»ri elektron pochta manzili ekanligini tekshiring:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$email</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;john.doe@example.com&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// Remove all illegal characters from email</span>
<span class="token variable">$email</span> <span class="token operator">=</span> <span class="token function">filter_var</span><span class="token punctuation">(</span><span class="token variable">$email</span><span class="token punctuation">,</span> <span class="token constant">FILTER_SANITIZE_EMAIL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Validate e-mail</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">filter_var</span><span class="token punctuation">(</span><span class="token variable">$email</span><span class="token punctuation">,</span> <span class="token constant">FILTER_VALIDATE_EMAIL</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$email</span></span> is a valid email address&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$email</span></span> is not a valid email address&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>URL manzilini tozalash va tasdiqlash</p><p>Quyidagi misolda filter_var()avval URLdan barcha noqonuniy belgilarni olib tashlash funksiyasidan foydalaniladi, soâ€˜ngra $url haqiqiy URL ekanligini tekshiring:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$url</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;https://www.w3schools.com&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// Remove all illegal characters from a url</span>
<span class="token variable">$url</span> <span class="token operator">=</span> <span class="token function">filter_var</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token constant">FILTER_SANITIZE_URL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Validate url</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">filter_var</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">,</span> <span class="token constant">FILTER_VALIDATE_URL</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$url</span></span> is a valid URL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;<span class="token interpolation"><span class="token variable">$url</span></span> is not a valid URL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,35),e=[p];function l(o,c){return a(),s("div",null,e)}const r=n(i,[["render",l],["__file","filters.html.vue"]]);export{r as default};
