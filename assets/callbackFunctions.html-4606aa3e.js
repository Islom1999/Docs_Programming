import{_ as n,o as a,c as s,a as t}from"./app-dcb21b78.js";const i={},p=t(`<h1 id="ðŸ“”-php-callback-functions" tabindex="-1"><a class="header-anchor" href="#ðŸ“”-php-callback-functions" aria-hidden="true">#</a> ðŸ“” PHP Callback Functions</h1><h2 id="php-callback-functions-php-qayta-qo-ng-iroq-qilish-funktsiyalari" tabindex="-1"><a class="header-anchor" href="#php-callback-functions-php-qayta-qo-ng-iroq-qilish-funktsiyalari" aria-hidden="true">#</a> PHP Callback Functions (PHP qayta qo&#39;ng&#39;iroq qilish funktsiyalari)</h2><p>Qayta qo&#39;ng&#39;iroq qilish funktsiyalari</p><p>Qayta qo&#39;ng&#39;iroq qilish funktsiyasi (ko&#39;pincha &quot;qayta qo&#39;ng&#39;iroq&quot; deb ataladi) boshqa funktsiyaga argument sifatida uzatiladigan funktsiyadir.</p><p>Har qanday mavjud funktsiya qayta qo&#39;ng&#39;iroq qilish funktsiyasi sifatida ishlatilishi mumkin. Funktsiyani qayta qo&#39;ng&#39;iroq qilish funktsiyasi sifatida ishlatish uchun boshqa funktsiyaning argumenti sifatida funktsiya nomini o&#39;z ichiga olgan qatorni o&#39;tkazing:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">function</span> <span class="token function-definition function">my_callback</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token variable">$strings</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;orange&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;banana&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;coconut&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$lengths</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;my_callback&quot;</span><span class="token punctuation">,</span> <span class="token variable">$strings</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$lengths</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>7-versiyadan boshlab, PHP anonim funktsiyalarni qayta qo&#39;ng&#39;iroq qilish funktsiyalari sifatida o&#39;tkazishi mumkin:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$strings</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;apple&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;orange&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;banana&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;coconut&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token variable">$lengths</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$item</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">,</span> <span class="token variable">$strings</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$lengths</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Foydalanuvchi tomonidan belgilangan funktsiyalarda qayta qo&#39;ng&#39;iroqlar</p><p>Foydalanuvchi tomonidan belgilangan funksiyalar va usullar qayta qo&#39;ng&#39;iroq qilish funksiyalarini argument sifatida ham olishi mumkin. Qayta qo&#39;ng&#39;iroq qilish funksiyalarini foydalanuvchi tomonidan belgilangan funksiya yoki usulda ishlatish uchun o&#39;zgaruvchiga qavslar qo&#39;shish orqali chaqiring va oddiy funktsiyalardagi kabi argumentlarni o&#39;tkazing:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">function</span> <span class="token function-definition function">exclaim</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token variable">$str</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;! &quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function-definition function">ask</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token variable">$str</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;? &quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function-definition function">printFormatted</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token variable">$format</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Calling the $format callback function</span>
  <span class="token keyword">echo</span> <span class="token variable">$format</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Pass &quot;exclaim&quot; and &quot;ask&quot; as callback functions to printFormatted()</span>
<span class="token function">printFormatted</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Hello world&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;exclaim&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">printFormatted</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Hello world&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;ask&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),o=[p];function e(l,c){return a(),s("div",null,o)}const r=n(i,[["render",e],["__file","callbackFunctions.html.vue"]]);export{r as default};
