import{_ as a,o as n,c as s,a as i}from"./app-dcb21b78.js";const t="/image_js/php10.png",e="/image_js/php11.png",p="/image_js/php12.png",l="/image_js/php13.png",o={},r=i(`<h1 id="üìî-php-regular-expressions" tabindex="-1"><a class="header-anchor" href="#üìî-php-regular-expressions" aria-hidden="true">#</a> üìî PHP Regular Expressions</h1><h2 id="php-regular-expressions-php-muntazam-ifodalari" tabindex="-1"><a class="header-anchor" href="#php-regular-expressions-php-muntazam-ifodalari" aria-hidden="true">#</a> PHP Regular Expressions (PHP muntazam ifodalari)</h2><p>Muntazam ifoda nima?</p><p>Muntazam ibora qidiruv sxemasini tashkil etuvchi belgilar ketma-ketligidir. Matndagi ma&#39;lumotlarni qidirganingizda, siz qidirayotgan narsani tasvirlash uchun ushbu qidiruv namunasidan foydalanishingiz mumkin.</p><p>Muntazam ifoda bitta belgi yoki murakkabroq naqsh bo&#39;lishi mumkin.</p><p>Oddiy iboralar matnni qidirish va matnni almashtirish operatsiyalarining barcha turlarini bajarish uchun ishlatilishi mumkin.</p><p>Sintaksis</p><p>PHPda muntazam ifodalar chegaralovchilar, naqsh va ixtiyoriy modifikatorlardan tashkil topgan qatorlardir.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$exp</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;/w3schools/i&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Yuqoridagi misolda /ajratuvchi , w3schools izlanayotgan naqsh va qidiruvni katta-kichik harflarga sezgir qilmaydigan modifikatordir .i</p><p>Ajratuvchi harf, raqam, teskari chiziq yoki bo&#39;sh joy bo&#39;lmagan har qanday belgi bo&#39;lishi mumkin. Eng keng tarqalgan ajratuvchi to ªg ªridan-to ªg ªri chiziq (/) bo ªladi, lekin naqshingizda to ªg ªridan-to ªg ªri chiziqchalar mavjud bo ªlsa, # yoki ~ kabi boshqa cheklovchilarni tanlash qulay.</p><p>Muntazam ifoda funktsiyalari</p><p>PHP muntazam ifodalardan foydalanish imkonini beruvchi turli funksiyalarni taqdim etadi. preg_match(), preg_match_all()va funktsiyalari preg_replace()eng ko&#39;p ishlatiladiganlardan ba&#39;zilari:</p><h2 id="preg-match-dan-foydalanish" tabindex="-1"><a class="header-anchor" href="#preg-match-dan-foydalanish" aria-hidden="true">#</a> preg_match() dan foydalanish</h2><p>Funktsiya preg_match()sizga satrda naqsh mosliklari mavjudligini bildiradi.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Visit W3Schools&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;/w3schools/i&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Outputs 1</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="preg-match-all-dan-foydalanish" tabindex="-1"><a class="header-anchor" href="#preg-match-all-dan-foydalanish" aria-hidden="true">#</a> preg_match_all() dan foydalanish</h2><p>Funktsiya preg_match_all()sizga satrdagi naqsh uchun nechta moslik topilganligini aytib beradi.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;The rain in SPAIN falls mainly on the plains.&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;/ain/i&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Outputs 4</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="preg-replace-dan-foydalanish" tabindex="-1"><a class="header-anchor" href="#preg-replace-dan-foydalanish" aria-hidden="true">#</a> preg_replace() dan foydalanish</h2><p>Funktsiya preg_replace()satrdagi naqshning barcha mosliklarini boshqa satr bilan almashtiradi.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Visit Microsoft!&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;/microsoft/i&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;W3Schools&quot;</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Outputs &quot;Visit W3Schools!&quot;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Muntazam ifoda modifikatorlari</p><p>Modifikatorlar qidiruv qanday bajarilishini o&#39;zgartirishi mumkin.</p><img src="`+t+'"><p>Muntazam ifoda naqshlari</p><p>Qavslar bir qator belgilarni topish uchun ishlatiladi:</p><img src="'+e+'"><p>Meta belgilar</p><p>Metabelgilar - bu alohida ma&#39;noga ega bo&#39;lgan belgilar:</p><img src="'+p+'"><p>Miqdor ko&#39;rsatkichlari</p><p>Miqdorlar miqdorlarni belgilaydi:</p><img src="'+l+`"><div class="custom-container warning"><p class="custom-container-title">Eslatma</p><p>Eslatma: Agar sizning ifodangiz maxsus belgilardan birini qidirishi kerak bo&#39;lsa, ulardan qochish uchun teskari chiziqdan ( \\ ) foydalanishingiz mumkin. Masalan, bir yoki bir nechta savol belgilarini qidirish uchun quyidagi ifodadan foydalanishingiz mumkin: $pattern = &#39;/?+/&#39;;</p></div><p>Guruhlash</p><p>( )Qavslar yordamida butun naqshlarga kvantlar qo&#39;llashingiz mumkin . Ular, shuningdek, mos keladigan naqsh qismlarini tanlash uchun ishlatilishi mumkin.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$str</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Apples and bananas.&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;/ba(na){2}/i&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Outputs 1</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,38),c=[r];function d(u,h){return n(),s("div",null,c)}const g=a(o,[["render",d],["__file","phpRegx.html.vue"]]);export{g as default};
