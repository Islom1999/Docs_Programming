import{_ as s,o as a,c as n,a as e}from"./app-1c9dd427.js";const t={},i=e(`<h1 id="ðŸ“”-php-oop-static-properties" tabindex="-1"><a class="header-anchor" href="#ðŸ“”-php-oop-static-properties" aria-hidden="true">#</a> ðŸ“” PHP OOP - Static Properties</h1><h2 id="php-oop-static-properties-oop-statik-xususiyatlar" tabindex="-1"><a class="header-anchor" href="#php-oop-static-properties-oop-statik-xususiyatlar" aria-hidden="true">#</a> PHP OOP - Static Properties (OOP - Statik xususiyatlar)</h2><p>PHP - Statik xususiyatlar</p><p>Statik xususiyatlar to&#39;g&#39;ridan-to&#39;g&#39;ri chaqirilishi mumkin - sinfning namunasini yaratmasdan.</p><p>Statik xususiyatlar kalit so&#39;z bilan e&#39;lon qilinadi static :</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">ClassName</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token variable">$staticProp</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;W3Schools&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Statik xususiyatga kirish uchun sinf nomi, ikki nuqta (:ðŸ˜ƒ va xususiyat nomidan foydalaning:</p><p>Sintaksis</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">ClassName</span><span class="token operator">::</span><span class="token variable">$staticProp</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Keling, bir misolni ko&#39;rib chiqaylik:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">pi</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token number">3.14159</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Get static property</span>
<span class="token keyword">echo</span> <span class="token class-name static-context">pi</span><span class="token operator">::</span><span class="token variable">$value</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Misol tushuntirildi</p><p>Bu erda biz statik xususiyatni e&#39;lon qilamiz: $value. Keyin, sinf nomi, ikki nuqta (:ðŸ˜ƒ va xususiyat nomidan (avval sinf yaratmasdan) foydalanib, statik xususiyatning qiymatini aks ettiramiz.</p><p>PHP - Statik xususiyatlar haqida ko&#39;proq ma&#39;lumot</p><p>Sinf statik va statik bo&#39;lmagan xususiyatlarga ega bo&#39;lishi mumkin. self Statik xususiyatga kalit so&#39;z va ikki nuqta (:ðŸ˜ƒ yordamida bitta sinfdagi usuldan kirish mumkin :</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">pi</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token variable">$value</span><span class="token operator">=</span><span class="token number">3.14159</span><span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">staticValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword static-context">self</span><span class="token operator">::</span><span class="token variable">$value</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token variable">$pi</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">pi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token variable">$pi</span><span class="token operator">-&gt;</span><span class="token function">staticValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Bolalar sinfidan statik xususiyatni chaqirish uchun parent bolalar sinfidagi kalit so&#39;zdan foydalaning:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token keyword">class</span> <span class="token class-name-definition class-name">pi</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token variable">$value</span><span class="token operator">=</span><span class="token number">3.14159</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">x</span> <span class="token keyword">extends</span> <span class="token class-name">pi</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">xStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword static-context">parent</span><span class="token operator">::</span><span class="token variable">$value</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Get value of static property directly via child class</span>
<span class="token keyword">echo</span> <span class="token class-name static-context">x</span><span class="token operator">::</span><span class="token variable">$value</span><span class="token punctuation">;</span>

<span class="token comment">// or get value of static property via xStatic() method</span>
<span class="token variable">$x</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">echo</span> <span class="token variable">$x</span><span class="token operator">-&gt;</span><span class="token function">xStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),p=[i];function l(o,c){return a(),n("div",null,p)}const u=s(t,[["render",l],["__file","staticProperties.html.vue"]]);export{u as default};
